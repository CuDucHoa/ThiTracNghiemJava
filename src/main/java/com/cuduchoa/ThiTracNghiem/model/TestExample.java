package com.cuduchoa.ThiTracNghiem.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class TestExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table test
     *
     * @mbg.generated Sat May 28 11:33:34 ICT 2022
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table test
     *
     * @mbg.generated Sat May 28 11:33:34 ICT 2022
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table test
     *
     * @mbg.generated Sat May 28 11:33:34 ICT 2022
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test
     *
     * @mbg.generated Sat May 28 11:33:34 ICT 2022
     */
    public TestExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test
     *
     * @mbg.generated Sat May 28 11:33:34 ICT 2022
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test
     *
     * @mbg.generated Sat May 28 11:33:34 ICT 2022
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test
     *
     * @mbg.generated Sat May 28 11:33:34 ICT 2022
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test
     *
     * @mbg.generated Sat May 28 11:33:34 ICT 2022
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test
     *
     * @mbg.generated Sat May 28 11:33:34 ICT 2022
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test
     *
     * @mbg.generated Sat May 28 11:33:34 ICT 2022
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test
     *
     * @mbg.generated Sat May 28 11:33:34 ICT 2022
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test
     *
     * @mbg.generated Sat May 28 11:33:34 ICT 2022
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test
     *
     * @mbg.generated Sat May 28 11:33:34 ICT 2022
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test
     *
     * @mbg.generated Sat May 28 11:33:34 ICT 2022
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table test
     *
     * @mbg.generated Sat May 28 11:33:34 ICT 2022
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        protected void addCriterionForJDBCTime(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value.getTime()), property);
        }

        protected void addCriterionForJDBCTime(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Time> timeList = new ArrayList<>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                timeList.add(new java.sql.Time(iter.next().getTime()));
            }
            addCriterion(condition, timeList, property);
        }

        protected void addCriterionForJDBCTime(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value1.getTime()), new java.sql.Time(value2.getTime()), property);
        }

        public Criteria andTestIdIsNull() {
            addCriterion("test_id is null");
            return (Criteria) this;
        }

        public Criteria andTestIdIsNotNull() {
            addCriterion("test_id is not null");
            return (Criteria) this;
        }

        public Criteria andTestIdEqualTo(Long value) {
            addCriterion("test_id =", value, "testId");
            return (Criteria) this;
        }

        public Criteria andTestIdNotEqualTo(Long value) {
            addCriterion("test_id <>", value, "testId");
            return (Criteria) this;
        }

        public Criteria andTestIdGreaterThan(Long value) {
            addCriterion("test_id >", value, "testId");
            return (Criteria) this;
        }

        public Criteria andTestIdGreaterThanOrEqualTo(Long value) {
            addCriterion("test_id >=", value, "testId");
            return (Criteria) this;
        }

        public Criteria andTestIdLessThan(Long value) {
            addCriterion("test_id <", value, "testId");
            return (Criteria) this;
        }

        public Criteria andTestIdLessThanOrEqualTo(Long value) {
            addCriterion("test_id <=", value, "testId");
            return (Criteria) this;
        }

        public Criteria andTestIdIn(List<Long> values) {
            addCriterion("test_id in", values, "testId");
            return (Criteria) this;
        }

        public Criteria andTestIdNotIn(List<Long> values) {
            addCriterion("test_id not in", values, "testId");
            return (Criteria) this;
        }

        public Criteria andTestIdBetween(Long value1, Long value2) {
            addCriterion("test_id between", value1, value2, "testId");
            return (Criteria) this;
        }

        public Criteria andTestIdNotBetween(Long value1, Long value2) {
            addCriterion("test_id not between", value1, value2, "testId");
            return (Criteria) this;
        }

        public Criteria andSubjectIdIsNull() {
            addCriterion("subject_id is null");
            return (Criteria) this;
        }

        public Criteria andSubjectIdIsNotNull() {
            addCriterion("subject_id is not null");
            return (Criteria) this;
        }

        public Criteria andSubjectIdEqualTo(Long value) {
            addCriterion("subject_id =", value, "subjectId");
            return (Criteria) this;
        }

        public Criteria andSubjectIdNotEqualTo(Long value) {
            addCriterion("subject_id <>", value, "subjectId");
            return (Criteria) this;
        }

        public Criteria andSubjectIdGreaterThan(Long value) {
            addCriterion("subject_id >", value, "subjectId");
            return (Criteria) this;
        }

        public Criteria andSubjectIdGreaterThanOrEqualTo(Long value) {
            addCriterion("subject_id >=", value, "subjectId");
            return (Criteria) this;
        }

        public Criteria andSubjectIdLessThan(Long value) {
            addCriterion("subject_id <", value, "subjectId");
            return (Criteria) this;
        }

        public Criteria andSubjectIdLessThanOrEqualTo(Long value) {
            addCriterion("subject_id <=", value, "subjectId");
            return (Criteria) this;
        }

        public Criteria andSubjectIdIn(List<Long> values) {
            addCriterion("subject_id in", values, "subjectId");
            return (Criteria) this;
        }

        public Criteria andSubjectIdNotIn(List<Long> values) {
            addCriterion("subject_id not in", values, "subjectId");
            return (Criteria) this;
        }

        public Criteria andSubjectIdBetween(Long value1, Long value2) {
            addCriterion("subject_id between", value1, value2, "subjectId");
            return (Criteria) this;
        }

        public Criteria andSubjectIdNotBetween(Long value1, Long value2) {
            addCriterion("subject_id not between", value1, value2, "subjectId");
            return (Criteria) this;
        }

        public Criteria andTestTermIsNull() {
            addCriterion("test_term is null");
            return (Criteria) this;
        }

        public Criteria andTestTermIsNotNull() {
            addCriterion("test_term is not null");
            return (Criteria) this;
        }

        public Criteria andTestTermEqualTo(String value) {
            addCriterion("test_term =", value, "testTerm");
            return (Criteria) this;
        }

        public Criteria andTestTermNotEqualTo(String value) {
            addCriterion("test_term <>", value, "testTerm");
            return (Criteria) this;
        }

        public Criteria andTestTermGreaterThan(String value) {
            addCriterion("test_term >", value, "testTerm");
            return (Criteria) this;
        }

        public Criteria andTestTermGreaterThanOrEqualTo(String value) {
            addCriterion("test_term >=", value, "testTerm");
            return (Criteria) this;
        }

        public Criteria andTestTermLessThan(String value) {
            addCriterion("test_term <", value, "testTerm");
            return (Criteria) this;
        }

        public Criteria andTestTermLessThanOrEqualTo(String value) {
            addCriterion("test_term <=", value, "testTerm");
            return (Criteria) this;
        }

        public Criteria andTestTermLike(String value) {
            addCriterion("test_term like", value, "testTerm");
            return (Criteria) this;
        }

        public Criteria andTestTermNotLike(String value) {
            addCriterion("test_term not like", value, "testTerm");
            return (Criteria) this;
        }

        public Criteria andTestTermIn(List<String> values) {
            addCriterion("test_term in", values, "testTerm");
            return (Criteria) this;
        }

        public Criteria andTestTermNotIn(List<String> values) {
            addCriterion("test_term not in", values, "testTerm");
            return (Criteria) this;
        }

        public Criteria andTestTermBetween(String value1, String value2) {
            addCriterion("test_term between", value1, value2, "testTerm");
            return (Criteria) this;
        }

        public Criteria andTestTermNotBetween(String value1, String value2) {
            addCriterion("test_term not between", value1, value2, "testTerm");
            return (Criteria) this;
        }

        public Criteria andTestDateIsNull() {
            addCriterion("test_date is null");
            return (Criteria) this;
        }

        public Criteria andTestDateIsNotNull() {
            addCriterion("test_date is not null");
            return (Criteria) this;
        }

        public Criteria andTestDateEqualTo(Date value) {
            addCriterionForJDBCDate("test_date =", value, "testDate");
            return (Criteria) this;
        }

        public Criteria andTestDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("test_date <>", value, "testDate");
            return (Criteria) this;
        }

        public Criteria andTestDateGreaterThan(Date value) {
            addCriterionForJDBCDate("test_date >", value, "testDate");
            return (Criteria) this;
        }

        public Criteria andTestDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("test_date >=", value, "testDate");
            return (Criteria) this;
        }

        public Criteria andTestDateLessThan(Date value) {
            addCriterionForJDBCDate("test_date <", value, "testDate");
            return (Criteria) this;
        }

        public Criteria andTestDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("test_date <=", value, "testDate");
            return (Criteria) this;
        }

        public Criteria andTestDateIn(List<Date> values) {
            addCriterionForJDBCDate("test_date in", values, "testDate");
            return (Criteria) this;
        }

        public Criteria andTestDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("test_date not in", values, "testDate");
            return (Criteria) this;
        }

        public Criteria andTestDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("test_date between", value1, value2, "testDate");
            return (Criteria) this;
        }

        public Criteria andTestDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("test_date not between", value1, value2, "testDate");
            return (Criteria) this;
        }

        public Criteria andTestTimeStartIsNull() {
            addCriterion("test_time_start is null");
            return (Criteria) this;
        }

        public Criteria andTestTimeStartIsNotNull() {
            addCriterion("test_time_start is not null");
            return (Criteria) this;
        }

        public Criteria andTestTimeStartEqualTo(Date value) {
            addCriterionForJDBCTime("test_time_start =", value, "testTimeStart");
            return (Criteria) this;
        }

        public Criteria andTestTimeStartNotEqualTo(Date value) {
            addCriterionForJDBCTime("test_time_start <>", value, "testTimeStart");
            return (Criteria) this;
        }

        public Criteria andTestTimeStartGreaterThan(Date value) {
            addCriterionForJDBCTime("test_time_start >", value, "testTimeStart");
            return (Criteria) this;
        }

        public Criteria andTestTimeStartGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("test_time_start >=", value, "testTimeStart");
            return (Criteria) this;
        }

        public Criteria andTestTimeStartLessThan(Date value) {
            addCriterionForJDBCTime("test_time_start <", value, "testTimeStart");
            return (Criteria) this;
        }

        public Criteria andTestTimeStartLessThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("test_time_start <=", value, "testTimeStart");
            return (Criteria) this;
        }

        public Criteria andTestTimeStartIn(List<Date> values) {
            addCriterionForJDBCTime("test_time_start in", values, "testTimeStart");
            return (Criteria) this;
        }

        public Criteria andTestTimeStartNotIn(List<Date> values) {
            addCriterionForJDBCTime("test_time_start not in", values, "testTimeStart");
            return (Criteria) this;
        }

        public Criteria andTestTimeStartBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("test_time_start between", value1, value2, "testTimeStart");
            return (Criteria) this;
        }

        public Criteria andTestTimeStartNotBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("test_time_start not between", value1, value2, "testTimeStart");
            return (Criteria) this;
        }

        public Criteria andTestTimeLimitIsNull() {
            addCriterion("test_time_limit is null");
            return (Criteria) this;
        }

        public Criteria andTestTimeLimitIsNotNull() {
            addCriterion("test_time_limit is not null");
            return (Criteria) this;
        }

        public Criteria andTestTimeLimitEqualTo(Integer value) {
            addCriterion("test_time_limit =", value, "testTimeLimit");
            return (Criteria) this;
        }

        public Criteria andTestTimeLimitNotEqualTo(Integer value) {
            addCriterion("test_time_limit <>", value, "testTimeLimit");
            return (Criteria) this;
        }

        public Criteria andTestTimeLimitGreaterThan(Integer value) {
            addCriterion("test_time_limit >", value, "testTimeLimit");
            return (Criteria) this;
        }

        public Criteria andTestTimeLimitGreaterThanOrEqualTo(Integer value) {
            addCriterion("test_time_limit >=", value, "testTimeLimit");
            return (Criteria) this;
        }

        public Criteria andTestTimeLimitLessThan(Integer value) {
            addCriterion("test_time_limit <", value, "testTimeLimit");
            return (Criteria) this;
        }

        public Criteria andTestTimeLimitLessThanOrEqualTo(Integer value) {
            addCriterion("test_time_limit <=", value, "testTimeLimit");
            return (Criteria) this;
        }

        public Criteria andTestTimeLimitIn(List<Integer> values) {
            addCriterion("test_time_limit in", values, "testTimeLimit");
            return (Criteria) this;
        }

        public Criteria andTestTimeLimitNotIn(List<Integer> values) {
            addCriterion("test_time_limit not in", values, "testTimeLimit");
            return (Criteria) this;
        }

        public Criteria andTestTimeLimitBetween(Integer value1, Integer value2) {
            addCriterion("test_time_limit between", value1, value2, "testTimeLimit");
            return (Criteria) this;
        }

        public Criteria andTestTimeLimitNotBetween(Integer value1, Integer value2) {
            addCriterion("test_time_limit not between", value1, value2, "testTimeLimit");
            return (Criteria) this;
        }

        public Criteria andTestQuantityIsNull() {
            addCriterion("test_quantity is null");
            return (Criteria) this;
        }

        public Criteria andTestQuantityIsNotNull() {
            addCriterion("test_quantity is not null");
            return (Criteria) this;
        }

        public Criteria andTestQuantityEqualTo(Integer value) {
            addCriterion("test_quantity =", value, "testQuantity");
            return (Criteria) this;
        }

        public Criteria andTestQuantityNotEqualTo(Integer value) {
            addCriterion("test_quantity <>", value, "testQuantity");
            return (Criteria) this;
        }

        public Criteria andTestQuantityGreaterThan(Integer value) {
            addCriterion("test_quantity >", value, "testQuantity");
            return (Criteria) this;
        }

        public Criteria andTestQuantityGreaterThanOrEqualTo(Integer value) {
            addCriterion("test_quantity >=", value, "testQuantity");
            return (Criteria) this;
        }

        public Criteria andTestQuantityLessThan(Integer value) {
            addCriterion("test_quantity <", value, "testQuantity");
            return (Criteria) this;
        }

        public Criteria andTestQuantityLessThanOrEqualTo(Integer value) {
            addCriterion("test_quantity <=", value, "testQuantity");
            return (Criteria) this;
        }

        public Criteria andTestQuantityIn(List<Integer> values) {
            addCriterion("test_quantity in", values, "testQuantity");
            return (Criteria) this;
        }

        public Criteria andTestQuantityNotIn(List<Integer> values) {
            addCriterion("test_quantity not in", values, "testQuantity");
            return (Criteria) this;
        }

        public Criteria andTestQuantityBetween(Integer value1, Integer value2) {
            addCriterion("test_quantity between", value1, value2, "testQuantity");
            return (Criteria) this;
        }

        public Criteria andTestQuantityNotBetween(Integer value1, Integer value2) {
            addCriterion("test_quantity not between", value1, value2, "testQuantity");
            return (Criteria) this;
        }

        public Criteria andTestStateIsNull() {
            addCriterion("test_state is null");
            return (Criteria) this;
        }

        public Criteria andTestStateIsNotNull() {
            addCriterion("test_state is not null");
            return (Criteria) this;
        }

        public Criteria andTestStateEqualTo(Boolean value) {
            addCriterion("test_state =", value, "testState");
            return (Criteria) this;
        }

        public Criteria andTestStateNotEqualTo(Boolean value) {
            addCriterion("test_state <>", value, "testState");
            return (Criteria) this;
        }

        public Criteria andTestStateGreaterThan(Boolean value) {
            addCriterion("test_state >", value, "testState");
            return (Criteria) this;
        }

        public Criteria andTestStateGreaterThanOrEqualTo(Boolean value) {
            addCriterion("test_state >=", value, "testState");
            return (Criteria) this;
        }

        public Criteria andTestStateLessThan(Boolean value) {
            addCriterion("test_state <", value, "testState");
            return (Criteria) this;
        }

        public Criteria andTestStateLessThanOrEqualTo(Boolean value) {
            addCriterion("test_state <=", value, "testState");
            return (Criteria) this;
        }

        public Criteria andTestStateIn(List<Boolean> values) {
            addCriterion("test_state in", values, "testState");
            return (Criteria) this;
        }

        public Criteria andTestStateNotIn(List<Boolean> values) {
            addCriterion("test_state not in", values, "testState");
            return (Criteria) this;
        }

        public Criteria andTestStateBetween(Boolean value1, Boolean value2) {
            addCriterion("test_state between", value1, value2, "testState");
            return (Criteria) this;
        }

        public Criteria andTestStateNotBetween(Boolean value1, Boolean value2) {
            addCriterion("test_state not between", value1, value2, "testState");
            return (Criteria) this;
        }

        public Criteria andTestGradeIsNull() {
            addCriterion("test_grade is null");
            return (Criteria) this;
        }

        public Criteria andTestGradeIsNotNull() {
            addCriterion("test_grade is not null");
            return (Criteria) this;
        }

        public Criteria andTestGradeEqualTo(String value) {
            addCriterion("test_grade =", value, "testGrade");
            return (Criteria) this;
        }

        public Criteria andTestGradeNotEqualTo(String value) {
            addCriterion("test_grade <>", value, "testGrade");
            return (Criteria) this;
        }

        public Criteria andTestGradeGreaterThan(String value) {
            addCriterion("test_grade >", value, "testGrade");
            return (Criteria) this;
        }

        public Criteria andTestGradeGreaterThanOrEqualTo(String value) {
            addCriterion("test_grade >=", value, "testGrade");
            return (Criteria) this;
        }

        public Criteria andTestGradeLessThan(String value) {
            addCriterion("test_grade <", value, "testGrade");
            return (Criteria) this;
        }

        public Criteria andTestGradeLessThanOrEqualTo(String value) {
            addCriterion("test_grade <=", value, "testGrade");
            return (Criteria) this;
        }

        public Criteria andTestGradeLike(String value) {
            addCriterion("test_grade like", value, "testGrade");
            return (Criteria) this;
        }

        public Criteria andTestGradeNotLike(String value) {
            addCriterion("test_grade not like", value, "testGrade");
            return (Criteria) this;
        }

        public Criteria andTestGradeIn(List<String> values) {
            addCriterion("test_grade in", values, "testGrade");
            return (Criteria) this;
        }

        public Criteria andTestGradeNotIn(List<String> values) {
            addCriterion("test_grade not in", values, "testGrade");
            return (Criteria) this;
        }

        public Criteria andTestGradeBetween(String value1, String value2) {
            addCriterion("test_grade between", value1, value2, "testGrade");
            return (Criteria) this;
        }

        public Criteria andTestGradeNotBetween(String value1, String value2) {
            addCriterion("test_grade not between", value1, value2, "testGrade");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table test
     *
     * @mbg.generated do_not_delete_during_merge Sat May 28 11:33:34 ICT 2022
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table test
     *
     * @mbg.generated Sat May 28 11:33:34 ICT 2022
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}